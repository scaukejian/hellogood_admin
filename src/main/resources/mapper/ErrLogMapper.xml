<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hellogood.mapper.ErrLogMapper" >
  <resultMap id="BaseResultMap" type="com.hellogood.domain.ErrLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="emp_name" property="empName" jdbcType="VARCHAR" />
    <result column="emp_id" property="empId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="target_id" property="targetId" jdbcType="INTEGER" />
    <result column="operation_time" property="operationTime" jdbcType="TIMESTAMP" />
    <result column="processor" property="processor" jdbcType="INTEGER" />
    <result column="process_time" property="processTime" jdbcType="TIMESTAMP" />
    <result column="process_status" property="processStatus" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hellogood.domain.ErrLog" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, emp_name, emp_id, type, target_id, operation_time, processor, process_time, process_status
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hellogood.domain.ErrLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from admin_err_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hellogood.domain.ErrLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_err_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from admin_err_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin_err_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hellogood.domain.ErrLogExample" >
    delete from admin_err_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hellogood.domain.ErrLog" >
    insert into admin_err_log (id, emp_name, emp_id, 
      type, target_id, operation_time, 
      processor, process_time, process_status, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{empId,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{targetId,jdbcType=INTEGER}, #{operationTime,jdbcType=TIMESTAMP}, 
      #{processor,jdbcType=INTEGER}, #{processTime,jdbcType=TIMESTAMP}, #{processStatus,jdbcType=VARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hellogood.domain.ErrLog" >
    insert into admin_err_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="empName != null" >
        emp_name,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="operationTime != null" >
        operation_time,
      </if>
      <if test="processor != null" >
        processor,
      </if>
      <if test="processTime != null" >
        process_time,
      </if>
      <if test="processStatus != null" >
        process_status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empName != null" >
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="operationTime != null" >
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processor != null" >
        #{processor,jdbcType=INTEGER},
      </if>
      <if test="processTime != null" >
        #{processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processStatus != null" >
        #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update admin_err_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null" >
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.empId != null" >
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.targetId != null" >
        target_id = #{record.targetId,jdbcType=INTEGER},
      </if>
      <if test="record.operationTime != null" >
        operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.processor != null" >
        processor = #{record.processor,jdbcType=INTEGER},
      </if>
      <if test="record.processTime != null" >
        process_time = #{record.processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.processStatus != null" >
        process_status = #{record.processStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update admin_err_log
    set id = #{record.id,jdbcType=INTEGER},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      emp_id = #{record.empId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      target_id = #{record.targetId,jdbcType=INTEGER},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      processor = #{record.processor,jdbcType=INTEGER},
      process_time = #{record.processTime,jdbcType=TIMESTAMP},
      process_status = #{record.processStatus,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update admin_err_log
    set id = #{record.id,jdbcType=INTEGER},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      emp_id = #{record.empId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      target_id = #{record.targetId,jdbcType=INTEGER},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      processor = #{record.processor,jdbcType=INTEGER},
      process_time = #{record.processTime,jdbcType=TIMESTAMP},
      process_status = #{record.processStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hellogood.domain.ErrLog" >
    update admin_err_log
    <set >
      <if test="empName != null" >
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="operationTime != null" >
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processor != null" >
        processor = #{processor,jdbcType=INTEGER},
      </if>
      <if test="processTime != null" >
        process_time = #{processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processStatus != null" >
        process_status = #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hellogood.domain.ErrLog" >
    update admin_err_log
    set emp_name = #{empName,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      target_id = #{targetId,jdbcType=INTEGER},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      processor = #{processor,jdbcType=INTEGER},
      process_time = #{processTime,jdbcType=TIMESTAMP},
      process_status = #{processStatus,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hellogood.domain.ErrLog" >
    update admin_err_log
    set emp_name = #{empName,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      target_id = #{targetId,jdbcType=INTEGER},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      processor = #{processor,jdbcType=INTEGER},
      process_time = #{processTime,jdbcType=TIMESTAMP},
      process_status = #{processStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>