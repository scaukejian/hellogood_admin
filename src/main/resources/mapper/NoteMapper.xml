<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hellogood.mapper.NoteMapper" >
  <resultMap id="BaseResultMap" type="com.hellogood.domain.Note" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="phone_unique_code" property="phoneUniqueCode" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="valid_status" property="validStatus" jdbcType="INTEGER" />
    <result column="display" property="display" jdbcType="INTEGER" />
    <result column="top" property="top" jdbcType="INTEGER" />
    <result column="finish" property="finish" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="folder_id" property="folderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, phone_unique_code, content, create_time, update_time, valid_status, 
    display, top, finish, type, color, folder_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hellogood.domain.NoteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from api_note
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from api_note
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hellogood.domain.NoteExample" >
    delete from api_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hellogood.domain.Note" useGeneratedKeys="true" keyProperty="id">
    insert into api_note (id, user_id, phone_unique_code, 
      content, create_time, update_time, 
      valid_status, display, top, 
      finish, type, color, 
      folder_id)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{phoneUniqueCode,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{validStatus,jdbcType=INTEGER}, #{display,jdbcType=INTEGER}, #{top,jdbcType=INTEGER}, 
      #{finish,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{folderId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hellogood.domain.Note" >
    insert into api_note
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="phoneUniqueCode != null" >
        phone_unique_code,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="validStatus != null" >
        valid_status,
      </if>
      <if test="display != null" >
        display,
      </if>
      <if test="top != null" >
        top,
      </if>
      <if test="finish != null" >
        finish,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="folderId != null" >
        folder_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="phoneUniqueCode != null" >
        #{phoneUniqueCode,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validStatus != null" >
        #{validStatus,jdbcType=INTEGER},
      </if>
      <if test="display != null" >
        #{display,jdbcType=INTEGER},
      </if>
      <if test="top != null" >
        #{top,jdbcType=INTEGER},
      </if>
      <if test="finish != null" >
        #{finish,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="folderId != null" >
        #{folderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_note
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.phoneUniqueCode != null" >
        phone_unique_code = #{record.phoneUniqueCode,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validStatus != null" >
        valid_status = #{record.validStatus,jdbcType=INTEGER},
      </if>
      <if test="record.display != null" >
        display = #{record.display,jdbcType=INTEGER},
      </if>
      <if test="record.top != null" >
        top = #{record.top,jdbcType=INTEGER},
      </if>
      <if test="record.finish != null" >
        finish = #{record.finish,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null" >
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.folderId != null" >
        folder_id = #{record.folderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_note
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      phone_unique_code = #{record.phoneUniqueCode,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      valid_status = #{record.validStatus,jdbcType=INTEGER},
      display = #{record.display,jdbcType=INTEGER},
      top = #{record.top,jdbcType=INTEGER},
      finish = #{record.finish,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      folder_id = #{record.folderId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hellogood.domain.Note" >
    update api_note
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="phoneUniqueCode != null" >
        phone_unique_code = #{phoneUniqueCode,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validStatus != null" >
        valid_status = #{validStatus,jdbcType=INTEGER},
      </if>
      <if test="display != null" >
        display = #{display,jdbcType=INTEGER},
      </if>
      <if test="top != null" >
        top = #{top,jdbcType=INTEGER},
      </if>
      <if test="finish != null" >
        finish = #{finish,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="folderId != null" >
        folder_id = #{folderId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hellogood.domain.Note" >
    update api_note
    set user_id = #{userId,jdbcType=INTEGER},
      phone_unique_code = #{phoneUniqueCode,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      valid_status = #{validStatus,jdbcType=INTEGER},
      display = #{display,jdbcType=INTEGER},
      top = #{top,jdbcType=INTEGER},
      finish = #{finish,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      folder_id = #{folderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>